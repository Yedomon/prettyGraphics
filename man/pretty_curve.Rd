% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pretty_curve.R
\name{pretty_curve}
\alias{pretty_curve}
\title{Pretty function plots}
\usage{
pretty_curve(x, f, param = list(), add_rug = NULL, return_list = FALSE, ...)
}
\arguments{
\item{x}{The x coordinates at which a function, \code{f}, should be evaluated.}

\item{f}{A function which depends on a named argument, \code{x}, and any other named arguments (see \code{param}).}

\item{param}{A named list of other arguments required to evaluate the function.}

\item{add_rug}{A named list of parameters, passed to \code{\link[graphics]{rug}} to add observed values to the plot. To add a rug using default parameters, simply specify \code{add_rug = list()}. If \code{x} values are not supplied in this list, they are taken from \code{x}. If \code{pos} is not supplied, the rug is positioned exactly along the x axis.}

\item{return_list}{A logical input which defines whether or not to return the list of axis parameters produced by \code{\link[prettyGraphics]{pretty_axis}}.}

\item{...}{Other parameters that are passed to \code{\link[prettyGraphics]{pretty_plot}}, such as \code{pretty-axis_args} to adjust axes.}
}
\value{
The function evaluates a function and returns a plot.
}
\description{
The function evaluates a user-supplied function at range of user-supplied \code{x} values (and with any other named parameters), and produces a pretty plot of the evaluated function using \code{\link[prettyGraphics]{pretty_plot}}. The function was particularly motivated by the need to visualise probability density functions (e.g. \code{\link[stats]{GammaDist}}).
}
\examples{
#### Generate some example x values
set.seed(1)
x <- seq(0, 100, length.out = 100)

#### Simple examples
pretty_curve(x = x, f = stats::dgamma, param = list(shape = 10, scale = 4))
pretty_curve(x = x, f = stats::dgamma, param = list(shape = 11, scale = 3))
pretty_curve(x = x, f = stats::dnorm, param = list(mean = 10, sd = 30))
pretty_curve(x = x, f = stats::dnorm, param = list(mean = 10, sd = 30, log = TRUE))

#### Customise plot by passing arguments to pretty_plot()
pretty_curve(x, f = stats::dgamma, param = list(shape = 10, scale = 4),
             pretty_axis_args = list(axis = list(las = TRUE)),
             col = "red", type = "l")

#### Add a rug with observed data
# Default is to take 'x' as observed data
pretty_curve(x, f = stats::dgamma, param = list(shape = 10, scale = 4),
             add_rug = list())
# Specify rug parameters
pretty_curve(x, f = stats::dgamma, param = list(shape = 10, scale = 4),
             add_rug = list(x = seq(0, 100, by = 10), col = "red", lwd = 2))

}
\seealso{
\code{\link[graphics]{curve}} for a similar function in base R.
}
\author{
Edward Lavender
}
