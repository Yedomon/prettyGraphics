pretty_hist(x)
hist(x)
x <- runif(100, 0, 0.1987)
pretty_hist(x)
hist(x)
#### Define pretty axes parameters
h <- graphics::hist(x, plot = FALSE, warn.unused = FALSE,...)
h <- graphics::hist(x, plot = FALSE, warn.unused = FALSE
)
pretty_axis_args$x <- list(x, y = h[[select]])
#### Implement pretty_axis_args
axis_ls <- implement_pretty_axis_args(pretty_axis_args)
axis_ls
h$counts
axis_ls$`1`$lim
ylim = axis_ls$`2`$lim
ylim = axis_ls$`2`$lim
axis_ls$`2`$lim
h
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x)
hist(x)
par(pp)
axis_ls
?hist
graphics::hist(x,
axes = FALSE,
xlim = axis_ls$`1`$lim, ylim = axis_ls$`2`$lim)
axis(side = 1, pos = 2)
axis(side = 1, pos = 6)
?clip
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x)
hist(x)
par(pp)
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x)
hist(x)
par(pp)
pretty_hist(x, col = "red")
hist(x)
hist(x)
pretty_hist(x, col = "red")
hist(x)
hist(1e1000)
hist(rep(1e1000, 1000)
)
pretty_hist(x, col = "red")
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
?hist
?clip
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
par(pp)
#### Define pretty axes parameters
h <- graphics::hist(x, plot = FALSE, warn.unused = FALSE,...)
pretty_axis_args$x <- list(y = h[[select]])
#### Implement pretty_axis_args
axis_ls <- implement_pretty_axis_args(pretty_axis_args)
pretty_axis_args$x <- list(y = h[[select]])
#### Implement pretty_axis_args
axis_ls <- implement_pretty_axis_args(pretty_axis_args)
axis_ls
pretty_axis_args = list(side = 2, axis = list(las = TRUE))
x <- runif(100, 0, 0.1987)
h <- graphics::hist(x, plot = FALSE, warn.unused = FALSE
)
h
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- c(1.466667, 1.500000)
pretty_hist(x)
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- c(1.466667, 1.500000)
pretty_hist(x)
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- c(1.466667, 1.500000)
pretty_hist(x)
hist(x)
par(pp)
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- c(1.466667, 1.500000)
pretty_hist(x)
hist(x)
par(pp)
h <- graphics::hist(x, plot = FALSE, warn.unused = FALSE
)
#### Define graph axis and limits
if(is.null(xaxis$at)) xaxis$at <- h$breaks
xaxis = list()
ypretty = list(n = 5)
yaxis = list()
xlim = NULL
ylim = NULL
select = "counts"
#### Define graph axis and limits
if(is.null(xaxis$at)) xaxis$at <- h$breaks
if(is.null(xlim)) xlim <- range(h$breaks)
ypretty$x <- h[[select]]
if(is.null(yaxis$at)) do.call("pretty", ypretty)
if(is.null(ylim)) ylim <- range(yaxis$at)
ylim
yaxis$at
ypretty$x
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- c(1.466667, 1.500000)
pretty_hist(x)
hist(x)
par(pp)
#### Define graph axis and limits
if(is.null(xaxis$at)) xaxis$at <- h$breaks
if(is.null(xlim)) xlim <- range(h$breaks)
ypretty$x <- c(0, max(h[[select]]))
if(length(unique(ypretty$x)) == 1) ypretty$x[2] <- ypretty$x[2] + 1
if(is.null(yaxis$at)) do.call("pretty", ypretty)
if(is.null(ylim)) ylim <- range(yaxis$at)
if(is.null(yaxis$at)) yaxis$at <- do.call("pretty", ypretty)
if(is.null(ylim)) ylim <- range(yaxis$at)
if(is.null(xaxis$pos)) xaxis$pos <- ylim[1]
if(is.null(yaxis$pos)) yaxis$pos <- xlim[1]
#### Plot histogram
graphics::hist(x,
axes = FALSE,
xlim = xlim, ylim = ylim,
xlab = xlab, ylab = ylab, main = main,...
)
pp <- par(mfrow = c(1, 2))
x <- c(1.466667, 1.500000)
pretty_hist(x)
hist(x)
par(pp)
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- c(1.466667, 1.500000)
pretty_hist(x)
hist(x)
par(pp)
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- c(1.466667, 1.500000)
pretty_hist(x)
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x, col = "red")
hist(x)
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- c(1.466667, 1.500000)
pretty_hist(x)
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x)
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- c(runif(100, 0, 0.1987), runif(100, 30, 500))
pretty_hist(x)
hist(x)
axis(side = 2, pos = 0, col = "red")
axis(side = 1, pos = 0)
?hist
pp <- par(mfrow = c(1, 2))
x <- c(1.466667, 1.500000)
pretty_hist(x)
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x)
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- c(runif(100, 0, 0.1987), runif(100, 30, 500))
pretty_hist(x)
hist(x)
par(pp)
?hist
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- c(1.466667, 1.500000)
pretty_hist(x)
hist(x)
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- c(1.466667, 1.500000)
pretty_hist(x)
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x)
hist(x)
par(pp)
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(1, 2))
x <- c(1.466667, 1.500000)
pretty_hist(x)
hist(x)
par(pp)
pp <- par(mfrow = c(1, 2))
x <- runif(100, 0, 0.1987)
pretty_hist(x)
hist(x)
par(pp)
pp <- par(mfrow = c(2, 3))
x <- c(1.466667, 1.500000)
pretty_hist(x)
hist(x)
x <- runif(100, 0, 0.1987)
pretty_hist(x)
hist(x)
x <- c(runif(100, 0, 0.1987), runif(100, 30, 500))
pretty_hist(x)
hist(x)
par(pp)
pp <- par(mfrow = c(3, 2))
x <- c(1.466667, 1.500000)
pretty_hist(x)
hist(x)
x <- runif(100, 0, 0.1987)
pretty_hist(x)
hist(x)
x <- c(runif(100, 0, 0.1987), runif(100, 30, 500))
pretty_hist(x)
hist(x)
par(pp)
source('~/Documents/PhD/Academic_PhD_Work/Data and Modelling/Scripts/Utils/plot.pretty/plot.pretty/R/pretty_hist.R')
pp <- par(mfrow = c(3, 2))
x <- c(1.466667, 1.500000)
pretty_hist(x)
hist(x)
x <- runif(100, 0, 0.1987)
pretty_hist(x)
hist(x)
x <- c(runif(100, 0, 0.1987), runif(100, 30, 500))
pretty_hist(x)
hist(x)
par(pp)
x <- rnorm(1000, 0, 1)
#### Example (3) Axes can be adjusted via xn, ypretty, or xaxis() and yaxis()
pretty_hist(x, xn = 2)
pretty_hist(x, ypretty = list(n = 10))
#### Example (3) Axes can be adjusted via xn, ypretty, or xaxis() and yaxis()
pretty_hist(x, xn = 2)
pretty_hist(x, ypretty = list(n = 10))
pretty_hist(x, xaxis = list(at = -5:5))
#### Example (3) Axes can be adjusted via xn, ypretty, or xaxis() and yaxis()
pretty_hist(x, xn = 2)
pretty_hist(x, ypretty = list(n = 10))
pretty_hist(x, xaxis = list(at = -5:5), xlim = c(5:5))
#### Example (3) Axes can be adjusted via xn, ypretty, or xaxis() and yaxis()
pretty_hist(x, xn = 2)
pretty_hist(x, ypretty = list(n = 10))
pretty_hist(x, xaxis = list(at = -5:5), xlim = c(5, 5))
#### Example (3) Axes can be adjusted via xn, ypretty, or xaxis() and yaxis()
pretty_hist(x, xn = 2)
pretty_hist(x, ypretty = list(n = 10))
pretty_hist(x, xaxis = list(at = -5:5), xlim = c(-5, 5))
#### Example (3) Axes can be adjusted via xn, ypretty, or xaxis() and yaxis()
pretty_hist(x, xn = 2)
pretty_hist(x, ypretty = list(n = 10))
pretty_hist(x, xaxis = list(at = -5:5), xlim = c(-5, 5))
#' #### Example (4) Axis labels can be xlab, ylab and main or adjusted via mtext() and mtext_args()
.pretty_hist(x, mtext_args = list(list(side = 1, "x var", line = 2), list(side = 2, "F", line = 2)))
#' #### Example (4) Axis labels can be xlab, ylab and main or adjusted via mtext() and mtext_args()
pretty_hist(x, mtext_args = list(list(side = 1, "x var", line = 2), list(side = 2, "F", line = 2)))
#' #### Example (4) Axis labels can be xlab, ylab and main or adjusted via mtext() and mtext_args()
pretty_hist(x, xlab = "xvar", ylab = "F")
pretty_hist(x, mtext_args = list(list(side = 1, "x var", line = 2), list(side = 2, "F", line = 2)))
#### Example (3) Axes can be adjusted via xn, ypretty, or xaxis() and yaxis()
pp <- par(mfrow = c(1, 3))
pretty_hist(x, xn = 2)
pretty_hist(x, ypretty = list(n = 10))
pretty_hist(x, xaxis = list(at = -5:5), xlim = c(-5, 5))
#' #### Example (4) Axis labels can be xlab, ylab and main or adjusted via mtext() and mtext_args()
pp <- par(mfrow = c(1, 2))
pretty_hist(x, xlab = "xvar", ylab = "F")
pretty_hist(x, mtext_args = list(list(side = 1, "x var", line = 2), list(side = 2, "F", line = 2)))
par(pp)
pretty_hist(x, xlab = "xvar", ylab = "F", mtext_args = list())
#' #### Example (4) Axis labels can be xlab, ylab and main or adjusted via mtext() and mtext_args()
pp <- par(mfrow = c(1, 2))
pretty_hist(x, xlab = "xvar", ylab = "F", mtext_args = list())
pretty_hist
pp <- par(mfrow = c(1, 2))
pretty_hist(x, xlab = "xvar", ylab = "F", mtext_args = list())
pretty_hist(x, mtext_args = list(list(side = 1, "x var", line = 2), list(side = 2, "F", line = 2)))
par(pp)
library(plot.pretty)
devtools::build_manual()
library(plot.pretty)
?pretty_axis
?pretty_hist
?axis
axis_args <- list(tick = TRUE, line = NA,
pos = NA, outer = FALSE, font = NA, lty = "solid",
lwd = 1, lwd.ticks = lwd, col = NULL, col.ticks = NULL,
hadj = NA, padj = NA, gap.axis = NA)
axis_args <- list(tick = TRUE, line = NA,
pos = NA, outer = FALSE, font = NA, lty = "solid",
lwd = 1, lwd.ticks = lwd, col = NULL, col.ticks = NULL,
hadj = NA, padj = NA, gap.axis = NA)
list <- "hi"
l <- list("hi")
l
axis_args <- list("tick", "line", "pos", "outer", "font", "lty", "lwd" , "lwd.ticks", "col", "col.ticks",
"hadj", "padj", "gap.axis", "cex.axis", "col.axis", "font.axis", "mgp", "xaxp", "yaxp",
"tck", "tcl", "las", "fg", "col", "xpd", "xaxt", "yaxt", "lab")
axis_args
l[["hi"]]
l["hi"]
l <- list(hi = 1)
l["hi"]
?pretty_hist
library(plot.pretty)
?plot_residuals
set.seed(1)
x <- 1:1000
y <- rnorm(length(x), x*0.5, 30)
dat <- data.frame(x = x, y = y)
dat$fct <- sample(1:2, size = nrow(dat), replace = TRUE)
dat$z <- rnorm(nrow(dat), dat$x*0.01, 50)
m1 <- lm(y ~ x, data = dat)
#### Example (1) Plot residuals using default options
pp <- graphics::par(mfrow = c(3, 3))
plot_residuals(residuals = stats::resid(m1),
fv = fitted(m1),
lp = fitted(m1),
vars = c("z", "fct"),
timestamp = "x",
dat = dat,
)
graphics::par(pp)
library(plot.pretty)
yaxis[[i]] <- pretty_axis_args$axis[[i]]
#### Simulate and model data
set.seed(1)
x <- 1:1000
y <- rnorm(length(x), x*0.5, 30)
dat <- data.frame(x = x, y = y)
dat$fct <- sample(1:2, size = nrow(dat), replace = TRUE)
dat$z <- rnorm(nrow(dat), dat$x*0.01, 50)
m1 <- lm(y ~ x, data = dat)
#### Example (1) Plot residuals using default options
pp <- graphics::par(mfrow = c(3, 3))
plot_residuals(residuals = stats::resid(m1),
fv = fitted(m1),
lp = fitted(m1),
vars = c("z", "fct"),
timestamp = "x",
dat = dat,
)
graphics::par(pp)
